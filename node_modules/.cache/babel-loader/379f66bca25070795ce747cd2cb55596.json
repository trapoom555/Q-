{"remainingRequest":"/Users/trapoom555/Desktop/qplus/node_modules/babel-loader/lib/index.js!/Users/trapoom555/Desktop/qplus/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/trapoom555/Desktop/qplus/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/trapoom555/Desktop/qplus/src/pages/QueueGlance.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/trapoom555/Desktop/qplus/src/pages/QueueGlance.vue","mtime":1572678764887},{"path":"/Users/trapoom555/Desktop/qplus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trapoom555/Desktop/qplus/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/trapoom555/Desktop/qplus/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/trapoom555/Desktop/qplus/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qIGVzbGludC1kaXNhYmxlIG5vLWNvbnNvbGUgKi8KaW1wb3J0IHsgcnRiIH0gZnJvbSAiLi4vZmlyZWJhc2UiOwp2YXIgdXNlcnMgPSBydGIuY29sbGVjdGlvbigndXNlcicpOwppbXBvcnQgYnRuIGZyb20gIi4uL2NvbXBvbmVudHMvYnV0dG9uLnZ1ZSI7CnZhciBkZXBhcnRtZW50cyA9IHJ0Yi5jb2xsZWN0aW9uKCdkZXBhcnRtZW50Jyk7CnZhciBwcm9jZXNzZXMgPSBydGIuY29sbGVjdGlvbigncHJvY2VzcycpOwp2YXIgZjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdRdWV1ZUdsYW5jZScsCiAgY29tcG9uZW50czogewogICAgYnRuOiBidG4KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1c2VyOiAnJywKICAgICAgcXVldWU6IDIwLAogICAgICB0aW1lOiAnMDA6MjUgaHInLAogICAgICBwcm9jZXNzOiAnJywKICAgICAgZGVwYXJ0bWVudDogJycKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLiRiaW5kKCd1c2VyJywgdXNlcnMuZG9jKHRoaXMuJHN0b3JlLmdldHRlcnMuTGlua0lEKSkudGhlbihmdW5jdGlvbiAodXNlcikgewogICAgICBfdGhpcy51c2VyID09PSB1c2VyOwogICAgICAvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25zb2xlICovCgogICAgICBjb25zb2xlLmxvZyhfdGhpcy51c2VyLmVucm9sbCk7CiAgICB9KTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFF1ZXVlOiBmdW5jdGlvbiBnZXRRdWV1ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZygnZ2V0Z2V0Jyk7CiAgICAgIHRoaXMub3V0ID0gMTIzNDsKCiAgICAgIGlmICh0aGlzLnVzZXIuZW5yb2xsID09IHRydWUpIHsKICAgICAgICBjb25zb2xlLmxvZygndHJ1ZXRydWUnKTsKICAgICAgICBkZXBhcnRtZW50cy5kb2MoJ091dCBQYXRpZW50IERlcGFydG1lbnQnKS5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgIF90aGlzMi5vdXQgPSA3ODk7CgogICAgICAgICAgaWYgKGRvYy5leGlzdHMpIHsKICAgICAgICAgICAgY29uc29sZS5sb2coJ2V4aXN0Jyk7CgogICAgICAgICAgICBfdGhpczIuJGJpbmQoJ2RlcGFydG1lbnQnLCBkZXBhcnRtZW50cy5kb2MoJ091dCBQYXRpZW50IERlcGFydG1lbnQnKSkudGhlbihmdW5jdGlvbiAoZGVwYXJ0bWVudCkgewogICAgICAgICAgICAgIF90aGlzMi5wcm9jZXNzID09PSBkZXBhcnRtZW50OwogICAgICAgICAgICAgIGYgPSBkb2MuZGF0YSgpOwogICAgICAgICAgICAgIGYucV9ydW4gKz0gMTsKICAgICAgICAgICAgICBfdGhpczIub3V0ID0gNTU1OwogICAgICAgICAgICAgIHVzZXJzLmRvYyhfdGhpczIudXNlci5JRCkuc2V0KHsKICAgICAgICAgICAgICAgIHByb2Nlc3NfbGlzdDogW3sKICAgICAgICAgICAgICAgICAgdHlwZTogJ2RlcGFydG1lbnQnLAogICAgICAgICAgICAgICAgICBuYW1lOiAnT3V0IFBhdGllbnQgRGVwYXJ0bWVudCcsCiAgICAgICAgICAgICAgICAgIHN0YXR1czogZi5xX3J1bgogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBtZXJnZTogdHJ1ZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGYucV9saXN0LnB1c2goewogICAgICAgICAgICAgICAgdXNlcklEOiBfdGhpczIudXNlci5JRCwKICAgICAgICAgICAgICAgIHF1ZXVlOiBmLnFfcnVuCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgZGVwYXJ0bWVudHMuZG9jKCdPdXQgUGF0aWVudCBEZXBhcnRtZW50Jykuc2V0KGYpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgX3RoaXMyLm91dCA9IGYucV9ydW47CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHByb2Nlc3Nlcy5kb2MoJ3JlZ2lzdGVyYXRpb24nKS5nZXQoKS50aGVuKGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICAgIF90aGlzMi5vdXQgPSA2NjY2NjY7CiAgICAgICAgICBjb25zb2xlLmxvZygnZWllaScpOwoKICAgICAgICAgIGlmIChkb2MuZXhpc3RzKSB7CiAgICAgICAgICAgIF90aGlzMi5vdXQgPSA1NTU1NTU1NTU7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdqYWFqJyk7CgogICAgICAgICAgICBfdGhpczIuJGJpbmQoJ3Byb2Nlc3MnLCBwcm9jZXNzZXMuZG9jKCdyZWdpc3RlcmF0aW9uJykpLnRoZW4oZnVuY3Rpb24gKHByb2Nlc3MpIHsKICAgICAgICAgICAgICBfdGhpczIucHJvY2VzcyA9PT0gcHJvY2VzczsKICAgICAgICAgICAgICBmID0gZG9jLmRhdGEoKTsKICAgICAgICAgICAgICBmLnFfcnVuICs9IDE7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2FoYWgnKTsKICAgICAgICAgICAgICBfdGhpczIub3V0ID0gNTU1OwogICAgICAgICAgICAgIHVzZXJzLmRvYyhfdGhpczIudXNlci5JRCkuc2V0KHsKICAgICAgICAgICAgICAgIHByb2Nlc3NfbGlzdDogW3sKICAgICAgICAgICAgICAgICAgdHlwZTogJ3Byb2Nlc3MnLAogICAgICAgICAgICAgICAgICBuYW1lOiAncmVnaXN0ZXJhdGlvbicsCiAgICAgICAgICAgICAgICAgIHN0YXR1czogZi5xX3J1bgogICAgICAgICAgICAgICAgfV0KICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBtZXJnZTogdHJ1ZQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGYucV9saXN0LnB1c2goewogICAgICAgICAgICAgICAgdXNlcklEOiBfdGhpczIudXNlci5JRCwKICAgICAgICAgICAgICAgIHF1ZXVlOiBmLnFfcnVuCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgcHJvY2Vzc2VzLmRvYygncmVnaXN0ZXJhdGlvbicpLnNldChmKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIF90aGlzMi5vdXQgPSBmLnFfcnVuOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["QueueGlance.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n    <img src=\"../assets/logo.png\">\n    <p class = \"topic\" v-on:click=\"getQueue\" >คิวปัจจุบัน:</p>\n    <p class = \"value\">{{queue}} คิว</p>\n    <p class = \"topic\">เวลาโดยประมาณ:</p>\n    <p class = \"value\">{{time}}</p>\n    <router-link to=\"/UIque\"><btn msg = \"กดคิว\"/></router-link>\n</div>\n</template>\n\n<script>\n/* eslint-disable no-console */\nimport { rtb } from \"../firebase\";\nconst users = rtb.collection('user')\nimport btn from '../components/button.vue'\nconst departments = rtb.collection('department')\nconst processes = rtb.collection('process')\nvar f\nexport default {\n    name: 'QueueGlance',\n    components:{\n    btn\n    },\n    data: function() {\n        return {\n        user: '',\n        queue: 20,\n        time: '00:25 hr',\n        process: '',\n        department: '',\n\n        }\n    },\n    created() {\n        this.$bind('user', users.doc(this.$store.getters.LinkID)).then(user => {\n        this.user === user\n        /* eslint-disable no-console */\n        console.log(this.user.enroll)\n    })},\n    methods: {\n        getQueue() {\n            console.log('getget')\n            this.out = 1234\n      if(this.user.enroll == true){\n        console.log('truetrue')\n        departments.doc('Out Patient Department').get().then(doc => {\n          this.out = 789\n          if (doc.exists) {\n              console.log('exist')\n              this.$bind('department', departments.doc('Out Patient Department')).then(department => {\n                this.process === department\n                f = doc.data()\n                f.q_run+=1\n\n                this.out = 555\n                users.doc(this.user.ID).set({\n                  process_list: [{\n                    type : 'department',\n                    name : 'Out Patient Department',\n                    status : f.q_run\n                  }]\n                }, { merge: true });\n                f.q_list.push({userID:this.user.ID,queue:f.q_run})\n                departments.doc('Out Patient Department').set(f).then(() => {\n                  this.out = f.q_run\n                })\n              })\n          }\n        })\n      }\n      else{\n        processes.doc('registeration').get().then(doc => {\n          this.out = 666666\n          console.log('eiei')\n          if (doc.exists) {\n            this.out = 555555555\n            console.log('jaaj')\n              this.$bind('process', processes.doc('registeration')).then(process => {\n                this.process === process\n                f = doc.data()\n                f.q_run+=1\n                console.log('ahah')\n                this.out = 555\n                users.doc(this.user.ID).set({\n                  process_list: [{\n                    type : 'process',\n                    name : 'registeration',\n                    status : f.q_run\n                  }]\n                }, { merge: true });\n                f.q_list.push({userID:this.user.ID,queue:f.q_run})\n                processes.doc('registeration').set(f).then(() => {\n                  this.out = f.q_run\n                })\n              })\n          }\n        })\n      }\n      \n    \n        }\n    }\n}\n</script>\n\n<style scoped>\na {\n  text-decoration: none;\n}\nimg {\n    width: 40%;\n    margin: auto;\n    margin-bottom: 5%;\n    margin-top: 10%;\n}\np {\n    font-size: 4.5vw;\n    text-align: left;\n    padding: 1%;\n}\n\n.topic {\n    margin-left: 7%;\n    color: #333;\n    border-bottom: 1px solid #ccc;\n    width: 50%;\n    padding-bottom: 3%;\n}\n.value {\n    margin-left:15%;\n}\n* {\n    font-family: 'Noto Sans Thai Cound', sans-serif;\n}\n</style>"],"sourceRoot":"src/pages"}]}